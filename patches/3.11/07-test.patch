diff --git a/Modules/socketmodule.c b/Modules/socketmodule.c
index f0c9b4691c..b9182fef52 100644
--- a/Modules/socketmodule.c
+++ b/Modules/socketmodule.c
@@ -5232,6 +5232,7 @@ sock_initobj_impl(PySocketSockObject *self, int family, int type, int proto,
                      FROM_PROTOCOL_INFO, &info, 0, WSA_FLAG_OVERLAPPED);
             Py_END_ALLOW_THREADS
             if (fd == INVALID_SOCKET) {
+                printf("%s:%d\n", __FILE__, __LINE__);
                 set_error();
                 return -1;
             }
@@ -5274,6 +5275,7 @@ sock_initobj_impl(PySocketSockObject *self, int family, int type, int proto,
                 /* getsockname() is not supported for SOL_ALG on Linux. */
                 if (family == -1 || CHECK_ERRNO(EBADF) || CHECK_ERRNO(ENOTSOCK)) {
 #endif
+                    printf("%s:%d\n", __FILE__, __LINE__);
                     set_error();
                     return -1;
                 }
@@ -5288,6 +5290,7 @@ sock_initobj_impl(PySocketSockObject *self, int family, int type, int proto,
                 {
                     type = tmp;
                 } else {
+                    printf("%s:%d\n", __FILE__, __LINE__);
                     set_error();
                     return -1;
                 }
@@ -5304,6 +5307,7 @@ sock_initobj_impl(PySocketSockObject *self, int family, int type, int proto,
                 {
                     proto = tmp;
                 } else {
+                    printf("%s:%d\n", __FILE__, __LINE__);
                     set_error();
                     return -1;
                 }
@@ -5338,6 +5342,7 @@ sock_initobj_impl(PySocketSockObject *self, int family, int type, int proto,
             if (fd == INVALID_SOCKET) {
                 /* Windows 7 or Windows 2008 R2 without SP1 or the hotfix */
                 support_wsa_no_inherit = 0;
+                printf("%s:%d\n", __FILE__, __LINE__);
                 fd = socket(family, type, proto);
             }
         }
@@ -5347,6 +5352,7 @@ sock_initobj_impl(PySocketSockObject *self, int family, int type, int proto,
         Py_END_ALLOW_THREADS
 
         if (fd == INVALID_SOCKET) {
+            printf("%s:%d\n", __FILE__, __LINE__);
             set_error();
             return -1;
         }
@@ -5383,6 +5389,11 @@ sock_initobj_impl(PySocketSockObject *self, int family, int type, int proto,
         Py_END_ALLOW_THREADS
 
         if (fd == INVALID_SOCKET) {
+            printf("%s:%d\n", __FILE__, __LINE__);
+            printf("SOCK_CLOEXEC: %d\n", SOCK_CLOEXEC);
+            printf("family: %d\n", family);
+            printf("type: %d\n", type);
+            printf("proto: %d\n", proto);
             set_error();
             return -1;
         }
